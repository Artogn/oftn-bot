{"wait":300000,"factoids":{"json_encode":{"value":"When you need to pass PHP variables to JavaScript, use the PHP method json_encode. For example: var info =  (<?php echo json_encode($info); ?>);","popularity":1},"iframe":{"value":"Cross-domain access to an iframe is disallowed. To otherwise get the document element of the iframe, use: iframe.contentWindow.document;","popularity":1},"console":{"value":"We are not your debugging console. For Firefox: Try Firebug <http://www.getfirebug.com/>; For Chrome: Use the built-in Chrome Developer Tools; For IE: Try Debug Bar <http://www.debugbar.com/>; For Safari: Use the Safari Dev Tools <http://developer.apple.com/technologies/safari/developer-tools.html>; And for Opera: Use DragonFly <http://www.opera.com/dragonfly/>.","popularity":2},"cross-domain":{"value":"The same-origin policy prevents access to most methods and properties across pages on different sites (even those inside iframes). Alternatives: A server-side proxy, the Dojo iframe trick, cross-origin resource sharing (http://www.w3.org/TR/cors/), and JSONP, a popular cross-domain alternative to XMLHttpRequest (Ajax).","popularity":0},"paste":{"value":"Paste links, not code. http://jsfiddle.net/ and http://www.webdevout.net/test are great. Please do use pastebin.com, the reasons are many. See `pastebin.","popularity":3},"code":{"value":"Show some code. Code examples should be complete (sufficient to show the problem) and minimal (as short as possible while remaining complete). Go to http://jsfiddle.net/ or see `paste.","popularity":4},"pastebin":{"value":"Please do not use pastebin.com. There are problems with syntax highlighting and font sizes that make it hard to read, and copy/paste includes line numbers. Consider using http://jsfiddle.net/ which allows us to run the code in our browser to help with debugging.","popularity":0},"cornify":{"value":"`^nn~ <http://www.cornify.com/>","popularity":3},"var":{"value":"Always declare variables with `var`, or you will pollute the globe.","popularity":5},"forms":{"value":"Accessing form elements via JavaScript: Don't use document.formName.elementName. Use document.forms['formName'].elements['elementName'], getElementById() or getElementsByName() instead.","popularity":0},"form":{"alias":"forms"},"cors":{"alias":"cross-domain"},"same origin":{"alias":"cross-domain"},"jsonp":{"alias":"cross-domain"},"reason":{"value":"Please explain why you need to even do such a thing. What are you trying to accomplish? What is your final goal? You may find that you are approaching the problem the wrong way.","popularity":1},"xy":{"value":"The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that, either. You ask about Y, which is a strange thing to want to do. Just ask about X.","popularity":1},"flxhr":{"value":"flXHR [fl\u0115k\u02b9s\u0259r], (flex-er), is a cross-browser, XHR-compatible tool for cross-domain Ajax (Flash) communication. It utilizes an invisible flXHR.swf instance that acts as sort of a client-side proxy for requests. http://flxhr.flensed.com/","popularity":1},"typeof":{"value":"The typeof operator returns a string indicating the type of the unevaluated operand. Returns 'object', 'boolean', 'number', 'string', 'function', 'xml', or 'undefined'. Arrays return 'object'. Use: if (typeof variable !== \"undefined\") to check if a variable is defined.","popularity":2},"comet":{"value":"http://en.wikipedia.org/wiki/Comet_(programming)","popularity":1},"kirby":{"value":"<(n_n<) <(n_n)> (>n_n)>","popularity":2},"eloquent":{"value":"Eloquent JavaScript is a comprehensive introductory Web-based book with examples and a built-in interpreter. http://eloquentjavascript.net/index.html","popularity":5},"tias":{"value":"Try it and see, why don'tcha?","popularity":1},"css":{"value":"Use Javascript to manipulate CSS stylesheets in a page. http://www.quirksmode.org/dom/w3c_css.html","popularity":0},"debug":{"alias":"console"},"recursion":{"value":"An easy way to do recursion--especially with anonymous functions--is to call arguments.callee, which is a reference to the currently executing function.","popularity":1},"ask":{"value":"Ask you question directly, you don't need to ask permission to ask a question! See also: http://www.catb.org/~esr/faqs/smart-questions.html","popularity":0},"java":{"value":"Remember, JavaScript is to Java as hamburger is to ham. We don't know Java, and if you're trying to apply your Java knowledge to JavaScript, it probably won't work. Try #java","popularity":0},"let":{"value":"The let statement provides a way to associate values with variables within the scope of a block, without affecting the values of like-named variables outside the block.","popularity":0},"pm":{"value":"Please investigate me with private messages. (Private messaging is not supported, so please use a Javascript interpreter; see `console)","popularity":0},"select":{"value":"To get the value of a <select> form field: var select = document.getElementById(\"select\"); var value = select.options[select.selectedIndex].value;","popularity":0},"doesn't work":{"value":"Look buddy, doesn't work is a strong statement. Does it sit on the couch all day? Is it making faces at you? Does it want more money? Is it sleeping with your girlfriend? Please be specific! Tell us what you want to happen, what is actually happening, and any error messages you find.","popularity":1},"$":{"value":"The `$` character has no special meaning in JavaScript, other than being allowed as a character in an identifier. It is used by some JavaScript libraries like jQuery, but traditionally used in machine generated JavaScript to avoid interference with other identifiers.","popularity":1},"jquery":{"value":"For help with jQuery-related problems, visit the #jquery channel.","popularity":1},"mdc":{"value":"The Mozilla Developer Network, a comprehensive, usable, and accurate resource for everyone developing for the Open Web. <https://developer.mozilla.org/en-US/>","popularity":2},"mdn":{"alias":"mdc"},"classes":{"value":"There are *no* `classes` in JavaScript. JavaScript uses prototypical OO: objects are constructed directly, based on other objects, wichout a blueprint. Thinking of constructor functions as classes is *wrong*, and will confuse you in the long term.","popularity":0},"debugging":{"alias":"console"},"eval":{"value":"The `eval` function is evil from both performance and design perspectives. If using `eval` is the answer, chances are you're asking the wrong question (although there are a few cases where it's useful). Read http://blogs.msdn.com/ericlippert/archive/2003/11/01/53329.aspx for more information.","popularity":0},"property access":{"value":"`myobject.foo` is just another way of saying `myobject['foo']`. This means that if `property` = 'foo', it's also the same as `myobject[property]`.","popularity":1},"hammertime":{"value":"\u2501\u2501\u258a \u2501\u2501\u258a \u2501\u2501\u258a","popularity":0},"wait":{"value":"Don't feel ignored and repeat your question quickly; if nobody knows your answer, nobody will answer you. While you wait, try searching https://developer.mozilla.org/en/JavaScript or https://developer.mozilla.org/en/DOM","popularity":1},"encodeURIComponent":{"value":"Always use `encodeURIComponent` to put query strings together. For example: \"foo=\"+encodeURIComponent(foo)+\"&bar=\"+encodeURIComponent(bar). Strings are encoded in UTF-8 format.","popularity":0},"encodeURI":{"alias":"encodeURIComponent"},"escape":{"alias":"encodeURIComponent"},"document.write":{"value":"document.wrong. Please use something more modern and less prone to doing confusing things.","popularity":0},"cross-browser":{"value":"QuirksMode.org is the prime source for browser compatibility information on the Internet. It is maintained by Peter-Paul Koch, mobile platform strategist in Amsterdam, the Netherlands. http://www.quirksmode.org/compatibility.html","popularity":0},"quirksmode":{"alias":"cross-browser"},"factoids":{"value":"You can access my factoid database at http://eboyjr.homelinux.org:3000/","popularity":0}}}